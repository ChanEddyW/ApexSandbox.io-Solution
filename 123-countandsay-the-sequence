public string countAndSay(integer N) {
    // base case
    if (N == 1) {
        return '1';
    }

    String prevSequence = '1';

    String currSequence;

    for (Integer i = 2; i <= N; i++) {
        System.debug(LoggingLevel.INFO, 'prevSequence = ' + prevSequence);

        System.debug(LoggingLevel.INFO, 'i = ' + i);

        currSequence = '';

        Integer count = 0;

        for (Integer j = 0; j < prevSequence.length(); j++) {
            System.debug(LoggingLevel.INFO, 'j = ' + j);

            count++;

            System.debug(LoggingLevel.INFO, 'count = ' + count);

            if (j == prevSequence.length() - 1 || prevSequence.charAt(j) != prevSequence.charAt(j + 1)) {
                System.debug(LoggingLevel.INFO, 'prevSequence.subString(j, j + 1) = ' + prevSequence.subString(j, j + 1));

                currSequence += String.valueOf(count) + prevSequence.subString(j, j + 1);

                System.debug(LoggingLevel.INFO, 'currSequence = ' + currSequence);

                count = 0;

                System.debug(LoggingLevel.INFO, 'count = ' + count);
            }
        }

        prevSequence = currSequence;
    }

    return currSequence;
}